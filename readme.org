#+TITLE: servant + beam + nix 
 

* Environments
- GHC : 8.6.5
- Cabal: 2.4.10
- OS: MacOS 10.14.16
- Nix: 2.3.1
- Editor: Spacemacs
- "IDE": haskell-ide-engine 0.13.0.0 x86_64 ghc-8.6.5


* To nix or not to nix 
The last thing I want to do is to drag anyone into build tool war.

If It Ain't Broke, Don't Nix it

** Install nix
#+BEGIN_SRC sh
curl https://nixos.org/nix/install | sh
#+END_SRC

** Update nix

#+BEGIN_SRC sh
nix-channel --update; nix-env -iA nixpkgs
#+END_SRC

** Uninstall nix

#+BEGIN_SRC shell
rm -rf /nix
#+END_SRC


*** Why use nix

**** Lorri
https://github.com/target/lorri/tree/master/example
https://github.com/aveltras/arohi-skeleton

How to use nix

usually we need three nix files for a haskell project.
- default.nix generated by cabal2nix, which captures our haskell deps
 src_sh[:exports code]{cabal2nix . > default.nix}

pin down nix packages

#+BEGIN_SRC shell
nix-prefetch-git https://github.com/NixOS/nixpkgs.git 19.09 > nixpkgs-19-09.json
#+END_SRC

to find the current nixos versions
https://github.com/NixOS/nixpkgs-channels/branches


** IDE-like support
https://www.srid.ca/haskell-nix.html
*** install Nix
*** TODO setup https://www.tweag.io/posts/2019-03-28-introducing-lorri.html
git@github.com:aveltras/arohi-skeleton.git
https://direnv.net/docs/hook.html
** editor support
- [[https://github.com/haskell/haskell-ide-engine][haskell-ide-engine]]
- [[https://github.com/digital-asset/ghcide][ghcide]]
- [[https://github.com/jyp/dante][dante]]  (emacs plugin)
- [[https://github.com/ndmitchell/ghcid][ghcid]] 
- [[https://github.com/leksah/leks][Leksah]] (an IDE for haskell)
*** haskell-ide-engine
                                     
Currently, hie has something [[https://github.com/haskell/haskell-ide-engine/issues/1376][issues]] work with cabal 3. So if you want to use haskell-ide-engine, you have to use cabal 2.4.10 or stack (stack uses cabal 2.4.10 internally). 

#+BEGIN_SRC sh
nix-channel --add https://nixos.org/channels/nixos-19.03 nixos-19-03
nix-channel --update
nix-env -iA nixos-19-03.cabal-install --dry-run
#+END_SRC                                                    

you can verify cabal version by src_sh[:exports code]{cabal --version}

**** [[https://github.com/Infinisil/all-hies][install hie using nix]]
make sure cachix is installed src_sh[:exports code]{nix-env -iA cachix -f https://cachix.org/api/v1/install}



#+BEGIN_SRC bash
cachix use all-hies
nix-env -iA selection --arg selector 'p: { inherit (p) ghc865; }' -f https://github.com/infinisil/all-hies/tarball/master
#+END_SRC
**** Editor intergration
https://github.com/haskell/haskell-ide-engine/#using-hie-with-spacemacs
*** ghcide
[[https://github.com/hercules-ci/ghcide-nix][install using nix]]
* Hello World (or hello alpaca ?)
I really enjoy [[https://twitter.com/rabbitonweb][PaweÅ‚ Szulc's ]][[https://www.youtube.com/watch?v=idU7GdlfP9Q][talk]] at Lambda World 2019. 
** [[https://haskell-servant.readthedocs.io/en/v0.8/tutorial/index.html][Servant Tutorial]] 

Outter level we need ([[https://hackage.haskell.org/package/warp][warp]] package) 

#+BEGIN_SRC haskell
import Network.Wai.Handler.Warp (run)

main :: IO ()
main = run 8081 app
#+END_SRC

src_haskell[:exports code]{run :: Port -> Application -> IO ()}

[[https://www.stackage.org/haddock/nightly-2019-11-17/warp-3.3.4/Network-Wai-Handler-Warp.html#v:run][run]]

** Setup local Dev tools
[[https://hoogle.haskell.org/][Hoogle]]

#+BEGIN_SRC nix
{ nixpkgs ? import <nixpkgs> {} , compiler ? "ghc865" }:
let
  inherit (nixpkgs) haskellPackages;
  myPackages = import ./release.nix {inherit nixpkgs compiler; };
in
  haskellPackages.shellFor {
    withHoogle = true;
    packages = p: [myPackages];
    buildInputs =  with nixpkgs.haskellPackages;
     [ hlint stylish-haskell ghcid hoogle];
}
#+END_SRC

*** TODO pin cabal-install to 2.4.10
#+BEGIN_SRC
oldPkgs = import ./pkgs-from-json.nix { json = ./nixos-18-03.json; };
buildInputs = [hlint ghcid oldPkgs.cabal-install]
#+END_SRC

* TODO checkout [[https://input-output-hk.github.io/haskell.nix/][input-output-hk haskell.nix]]
* References
- https://blog.latukha.com/NixOS-HIE-Emacs/
- https://www.youtube.com/watch?v=idU7GdlfP9Q
- https://github.com/digital-asset/ghcide/issues/137
- https://github.com/Gabriel439/haskell-nix
- https://cah6.github.io/technology/nix-haskell-1/
- https://github.com/cah6/haskell-nix-skeleton-1
- https://nixos.org/nixpkgs/manual/#haskell
