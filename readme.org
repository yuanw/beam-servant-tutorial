#+TITLE: A tutorial about servant and beam for haskell newcomers 

* Setup 
If you already have a produtive haskell development environment, please skip this section.
Setuping a development environment could be the frustrating part in learning a new language.

- Build Tools
- Editor integration
- Setup a new haskell project

nix + haskell-ide-engine
** Editors
  We can setup a decent haskell development environment with emacs, vim or vscode.
** nix, stack or just plain cabal 
The last thing I want to do is to drag anyone into build tool war.
https://cah6.github.io/technology/nix-haskell-1/
https://github.com/cah6/haskell-nix-skeleton-1
https://nixos.org/nixpkgs/manual/#haskell
*** Cabal
The easiest way to install cabal ang ghc should be [[https://www.haskell.org/ghcup/][ghcup]].
https://github.com/haskell/ghcup#usage

*** Why use nix
https://github.com/target/lorri/tree/master/example
https://github.com/aveltras/arohi-skeleton
**** Lorri
*** stack
** IDE-like support
https://www.srid.ca/haskell-nix.html
*** install Nix
** editor support
- [[https://github.com/haskell/haskell-ide-engine][haskell-ide-engine]]
- [[https://github.com/digital-asset/ghcide][ghcide]]
- [[https://github.com/jyp/dante][dante]]  (emacs plugin)
- [[https://github.com/ndmitchell/ghcid][ghcid]] 
- [[https://github.com/leksah/leks][Leksah]] (an IDE for haskell)
*** haskell-ide-engine
                                     
Currently, hie has something [[https://github.com/haskell/haskell-ide-engine/issues/1376][issues]] work with cabal 3. So if you want to use haskell-ide-engine, you have to use cabal 2.4.10 or stack (stack uses cabal 2.4.10 internally). 

#+BEGIN_SRC sh
nix-channel --add https://nixos.org/channels/nixos-19.03 nixos-19-03
nix-channel --update
nix-env -iA nixos-19-03.cabal-install --dry-run
#+END_SRC                                                    

you can verify cabal version by `cabal --version`

**** [[https://github.com/Infinisil/all-hies][install hie using nix]]
make sure cachix is installed

#+BEGIN_SRC bash
cachix use all-hies
nix-env -iA selection --arg selector 'p: { inherit (p) ghc865; }' -f https://github.com/infinisil/all-hies/tarball/master
#+END_SRC
**** Editor intergration
https://github.com/haskell/haskell-ide-engine/#using-hie-with-spacemacs
*** ghcide
[[https://github.com/hercules-ci/ghcide-nix][install using nix]]
* Hello World (or hello alpaca ?)
I really enjoy [[https://twitter.com/rabbitonweb][PaweÅ‚ Szulc's ]][[https://www.youtube.com/watch?v=idU7GdlfP9Q][talk]] at Lambda World 2019. 
** [[https://haskell-servant.readthedocs.io/en/v0.8/tutorial/index.html][Servant Tutorial]] 

Outter level we need ([[https://hackage.haskell.org/package/warp][warp]] package) 

#+BEGIN_SRC haskell
import Network.Wai.Handler.Warp (run)

main :: IO ()
main = run 8081 app
#+END_SRC

src_haskell[:exports code]{run :: Port -> Application -> IO ()}

[[https://www.stackage.org/haddock/nightly-2019-11-17/warp-3.3.4/Network-Wai-Handler-Warp.html#v:run][run]]

* References
- https://blog.latukha.com/NixOS-HIE-Emacs/
- https://www.youtube.com/watch?v=idU7GdlfP9Q
- https://github.com/digital-asset/ghcide/issues/137
- https://github.com/Gabriel439/haskell-nix
